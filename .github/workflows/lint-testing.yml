name: Lints-Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down

jobs:
  test-os:

    name: test ${{ matrix.os }}-${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        poetry-version: ["1.5.1"]
        python-version: ["3.8", "3.9", "3.10","3.11.5"]

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup override set stable && rustup update

      - name: Install clippy
        run: rustup component add clippy

      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.python-version }}-v1
        
      - name: Run cargo tests
        run: |
          make format
          make lints
          make test.unit
        env:
          RUST_BACKTRACE: 1


  test-ubuntu-pypy:
    name: test ubuntu-${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        poetry-version: ["1.5.1"]
        python-version: ["pypy3.8", "pypy3.9", "pypy3.10"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup override set stable && rustup update

      - name: Install clippy
        run: rustup component add clippy

      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.python-version }}-v1
        
      - name: Run cargo tests
        run: |
          make format
          make lints
          make test.unit
        env:
          RUST_BACKTRACE: 1

  test-build:
    needs: [test-os]
    name: build - ubuntu - ${{ matrix.manylinux }} - ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, x86]
        manylinux: [auto]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: pip install -U twine maturin

      - name: Set up Rust
        run: rustup override set stable && rustup update

      - name: Try maturin
        run: |
          maturin build --release --out dist --interpreter 3.11
        env:
          RUST_BACKTRACE: 1

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist --interpreter 3.11
          rust-toolchain: stable
          docker-options: -e CI
        env:
          RUST_BACKTRACE: 1

      - run: ls -lh dist/

      - run: twine check --strict dist/*